<?php
$input = explode("\n", trim(file_get_contents('3.txt')));
$inputs = ["R98,U47,R26,D63,R33,U87,L62,D20,R33,U53,R51",
"U98,R91,D20,R16,D67,R40,U7,R15,U6,R7"];
$inputs = array_map(function($a) {return explode(',', $a);}, $input);

// intersects, which we calculated in part 1
$is = array ( 485 => '486 0', 628 => '629 0', 814 => '815 0', 1621 => '815 -443', 4542 => '-414 -253', 5119 => '-991 -253', 5123 => '-995 -253', 5858 => '-1158 -655', 6021 => '-995 -655', 6756 => '-688 -227', 6759 => '-688 -224', 7079 => '-845 -61', 7225 => '-991 -61', 8512 => '-995 -434', 8516 => '-991 -434', 9070 => '-669 -666', 11196 => '-414 -417', 11511 => '-480 -666', 18451 => '-4 -228', 19139 => '629 -173', 19325 => '815 -173', 19807 => '857 -613', 20786 => '1706 -577', 21282 => '1431 -356', 21395 => '1318 -356', 21917 => '1053 -613', 34399 => '154 -228', 34467 => '154 -160', 35128 => '472 183', 35142 => '486 183', 35285 => '629 183', 35394 => '738 183', 35471 => '815 183', 35617 => '961 183', 35917 => '1104 340', 35950 => '1104 373', 36374 => '1196 705', 37669 => '2171 1025', 37911 => '2288 900', 38474 => '2177 448', 38480 => '2171 448', 38654 => '2122 323', 39115 => '1683 301', 39704 => '1539 -144', 39852 => '1539 -292', 40050 => '1431 -382', 40163 => '1318 -382', 41067 => '896 100', 41068 => '896 101', 41340 => '896 373', 41717 => '738 592', 42043 => '412 592', 42419 => '213 769', 42453 => '213 803', 43292 => '278 1577', 44980 => '783 1076', 45252 => '783 804', 45459 => '783 597', 45665 => '738 436', 45931 => '472 436', 46110 => '293 436', 46186 => '227 446', 46225 => '227 485', 46306 => '227 566', 46509 => '227 769', 46543 => '227 803', 47571 => '842 804', 47778 => '842 597', 48311 => '1138 804', 48536 => '1138 1029', 48718 => '1060 1133', 49999 => '1060 1666', 53636 => '1643 1210', 54026 => '1888 1355', );

$si = array_flip($is);

// store every single part of the wire on a grid as coords or something.
// RLUD
$dirs = ['R'=>1, 'D'=>-1, 'L'=>-1, 'U'=>1];
$crd_steps = [];
foreach ($inputs as $k => $input) {
    $x = $y = $steps = 0;
    foreach ($input as $jump) {
        list($dir, $len) = [substr($jump, 0, 1), (int) substr($jump, 1)];
        $pm = $dirs[$dir];
        if ($dir == 'R' or $dir == 'L') {
            for($i = 1; $i<=$len; $i++) {
                $steps++;
                $crd = ($i*$pm+$x).' '.$y;
                if (isset($si[$crd])) { // this is an intersection, so store the steps for it
                    $crd_steps[$crd][$k] = $steps;
                }
                $out[$k][] = $crd;
            }
            $x += $len * $pm;
        }else{
            for($i = 1; $i<=$len; $i++) {
                $steps++;
                $crd = $x.' '.($i*$pm+$y);
                if (isset($si[$crd])) { // this is an intersection, so store the steps for it
                    $crd_steps[$crd][$k] = $steps;
                }
                $out[$k][] = $crd;
            }
            $y += $len * $pm;
        }
    }
}

$is = array_intersect($out[0], $out[1]);

foreach ($is as $pair) {
    list($a, $b) = explode(' ', $pair);
    $sums[] = abs($a) + abs($b);
}
// echo min($sums); // part 1

foreach ($crd_steps as $crd => $steps) {
    $step_sum = $steps[0] + $steps[1];
    $step_counts[] = $step_sum;
}
echo min($step_counts);

?>